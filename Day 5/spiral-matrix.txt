class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int top = 0, bottom = matrix.size() - 1, left = 0, right = matrix[0].size() - 1, count = matrix.size() * matrix[0].size();
        vector<int> res;
        
        while(count > 0) {
            for(int i = left; i <= right and count > 0; ++i, --count) {
                res.push_back(matrix[top][i]);
            }
            for(int i = top + 1; i <= bottom and count > 0; ++i, --count) {
                res.push_back(matrix[i][right]);
            }
            for(int i = right - 1; i >= left and count > 0; --i, --count) {
                res.push_back(matrix[bottom][i]);
            }
            for(int i = bottom - 1; i >= top + 1 and count > 0; --i, --count) {
                res.push_back(matrix[i][left]);
            }
            ++top, --right, ++left, --bottom;
            }
        
        return res;
    }
};