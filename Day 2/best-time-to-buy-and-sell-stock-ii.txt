class Solution {
public:
    vector<vector<int>> dp;
    
    int util(vector<int> &prices, int index, bool isHold) {
        if(index == prices.size()) return 0;
        if(dp[index][isHold] != -1) return dp[index][isHold];
        int cost = util(prices, index + 1, isHold);
        if(isHold) {
            return dp[index][isHold] = max(cost, prices[index] + util(prices, index + 1, false));
        } else {
            return dp[index][isHold] = max(cost, -prices[index] + util(prices, index + 1, true));
        }
    }
    
    int maxProfit(vector<int>& prices) {
        dp = vector<vector<int>>(prices.size(), vector<int>(2, -1));
        return util(prices, 0, 0);
    }
};