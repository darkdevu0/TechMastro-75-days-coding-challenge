class RandomizedSet {
public:
    vector<int> arr;
    unordered_map<int, int> index;
    
    RandomizedSet() {
        
    }
    
    bool insert(int val) {
        if(index.count(val)) return false;
        arr.push_back(val);
        index[val] = arr.size() - 1;
        return true;
    }
    
    bool remove(int val) {
        if(!index.count(val)) return false;
        int last = arr.back();
        swap(arr[index[val]], arr[arr.size() - 1]);
        index[last] = index[val];
        index.erase(val);
        arr.pop_back();
        return true;
    }
    
    int getRandom() {
        return arr[rand() % arr.size()];
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */